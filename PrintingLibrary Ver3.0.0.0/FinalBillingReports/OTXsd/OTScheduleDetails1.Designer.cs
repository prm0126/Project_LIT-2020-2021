//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.6387
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Infologics.Medilogics.PrintingLibrary.FinalBillingReports.OTXsd {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OTScheduleDetails")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OTScheduleDetails : global::System.Data.DataSet {
        
        private OT_DTLS_SCHEDULEDataTable tableOT_DTLS_SCHEDULE;
        
        private OT_MAST_SCHEDULEDataTable tableOT_MAST_SCHEDULE;
        
        private OT_DTLS_SCHEDULE_RESOURCEDataTable tableOT_DTLS_SCHEDULE_RESOURCE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OTScheduleDetails() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OTScheduleDetails(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OT_DTLS_SCHEDULE"] != null)) {
                    base.Tables.Add(new OT_DTLS_SCHEDULEDataTable(ds.Tables["OT_DTLS_SCHEDULE"]));
                }
                if ((ds.Tables["OT_MAST_SCHEDULE"] != null)) {
                    base.Tables.Add(new OT_MAST_SCHEDULEDataTable(ds.Tables["OT_MAST_SCHEDULE"]));
                }
                if ((ds.Tables["OT_DTLS_SCHEDULE_RESOURCE"] != null)) {
                    base.Tables.Add(new OT_DTLS_SCHEDULE_RESOURCEDataTable(ds.Tables["OT_DTLS_SCHEDULE_RESOURCE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OT_DTLS_SCHEDULEDataTable OT_DTLS_SCHEDULE {
            get {
                return this.tableOT_DTLS_SCHEDULE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OT_MAST_SCHEDULEDataTable OT_MAST_SCHEDULE {
            get {
                return this.tableOT_MAST_SCHEDULE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OT_DTLS_SCHEDULE_RESOURCEDataTable OT_DTLS_SCHEDULE_RESOURCE {
            get {
                return this.tableOT_DTLS_SCHEDULE_RESOURCE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            OTScheduleDetails cln = ((OTScheduleDetails)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OT_DTLS_SCHEDULE"] != null)) {
                    base.Tables.Add(new OT_DTLS_SCHEDULEDataTable(ds.Tables["OT_DTLS_SCHEDULE"]));
                }
                if ((ds.Tables["OT_MAST_SCHEDULE"] != null)) {
                    base.Tables.Add(new OT_MAST_SCHEDULEDataTable(ds.Tables["OT_MAST_SCHEDULE"]));
                }
                if ((ds.Tables["OT_DTLS_SCHEDULE_RESOURCE"] != null)) {
                    base.Tables.Add(new OT_DTLS_SCHEDULE_RESOURCEDataTable(ds.Tables["OT_DTLS_SCHEDULE_RESOURCE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableOT_DTLS_SCHEDULE = ((OT_DTLS_SCHEDULEDataTable)(base.Tables["OT_DTLS_SCHEDULE"]));
            if ((initTable == true)) {
                if ((this.tableOT_DTLS_SCHEDULE != null)) {
                    this.tableOT_DTLS_SCHEDULE.InitVars();
                }
            }
            this.tableOT_MAST_SCHEDULE = ((OT_MAST_SCHEDULEDataTable)(base.Tables["OT_MAST_SCHEDULE"]));
            if ((initTable == true)) {
                if ((this.tableOT_MAST_SCHEDULE != null)) {
                    this.tableOT_MAST_SCHEDULE.InitVars();
                }
            }
            this.tableOT_DTLS_SCHEDULE_RESOURCE = ((OT_DTLS_SCHEDULE_RESOURCEDataTable)(base.Tables["OT_DTLS_SCHEDULE_RESOURCE"]));
            if ((initTable == true)) {
                if ((this.tableOT_DTLS_SCHEDULE_RESOURCE != null)) {
                    this.tableOT_DTLS_SCHEDULE_RESOURCE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OTScheduleDetails";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OTScheduleDetails.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOT_DTLS_SCHEDULE = new OT_DTLS_SCHEDULEDataTable();
            base.Tables.Add(this.tableOT_DTLS_SCHEDULE);
            this.tableOT_MAST_SCHEDULE = new OT_MAST_SCHEDULEDataTable();
            base.Tables.Add(this.tableOT_MAST_SCHEDULE);
            this.tableOT_DTLS_SCHEDULE_RESOURCE = new OT_DTLS_SCHEDULE_RESOURCEDataTable();
            base.Tables.Add(this.tableOT_DTLS_SCHEDULE_RESOURCE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOT_DTLS_SCHEDULE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOT_MAST_SCHEDULE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOT_DTLS_SCHEDULE_RESOURCE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OTScheduleDetails ds = new OTScheduleDetails();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void OT_DTLS_SCHEDULERowChangeEventHandler(object sender, OT_DTLS_SCHEDULERowChangeEvent e);
        
        public delegate void OT_MAST_SCHEDULERowChangeEventHandler(object sender, OT_MAST_SCHEDULERowChangeEvent e);
        
        public delegate void OT_DTLS_SCHEDULE_RESOURCERowChangeEventHandler(object sender, OT_DTLS_SCHEDULE_RESOURCERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OT_DTLS_SCHEDULEDataTable : global::System.Data.TypedTableBase<OT_DTLS_SCHEDULERow> {
            
            private global::System.Data.DataColumn columnOT_DTLS_SCHEDULE_ID;
            
            private global::System.Data.DataColumn columnOT_MAST_SCHEDULE_ID;
            
            private global::System.Data.DataColumn columnISORDER_WISE;
            
            private global::System.Data.DataColumn columnEMR_PAT_DTLS_INV_ORDER_ID;
            
            private global::System.Data.DataColumn columnEMR_PROVIDER_VISIT_ID;
            
            private global::System.Data.DataColumn columnINV_CATEGORY_ID;
            
            private global::System.Data.DataColumn columnINV_MAST_SERVICE_ID;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            private global::System.Data.DataColumn columnDURATION_IN_MIN;
            
            private global::System.Data.DataColumn columnEMR_PAT_OT_ORDER_ID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSER_DURATION_HOUR;
            
            private global::System.Data.DataColumn columnSER_DURATION_MIN;
            
            private global::System.Data.DataColumn columnEMR_PAT_MAST_INV_ORDER_ID;
            
            private global::System.Data.DataColumn columnISOTCHECKLIST_ENTERED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULEDataTable() {
                this.TableName = "OT_DTLS_SCHEDULE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OT_DTLS_SCHEDULEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OT_DTLS_SCHEDULEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OT_DTLS_SCHEDULE_IDColumn {
                get {
                    return this.columnOT_DTLS_SCHEDULE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OT_MAST_SCHEDULE_IDColumn {
                get {
                    return this.columnOT_MAST_SCHEDULE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISORDER_WISEColumn {
                get {
                    return this.columnISORDER_WISE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMR_PAT_DTLS_INV_ORDER_IDColumn {
                get {
                    return this.columnEMR_PAT_DTLS_INV_ORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMR_PROVIDER_VISIT_IDColumn {
                get {
                    return this.columnEMR_PROVIDER_VISIT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_CATEGORY_IDColumn {
                get {
                    return this.columnINV_CATEGORY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_MAST_SERVICE_IDColumn {
                get {
                    return this.columnINV_MAST_SERVICE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DURATION_IN_MINColumn {
                get {
                    return this.columnDURATION_IN_MIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMR_PAT_OT_ORDER_IDColumn {
                get {
                    return this.columnEMR_PAT_OT_ORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SER_DURATION_HOURColumn {
                get {
                    return this.columnSER_DURATION_HOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SER_DURATION_MINColumn {
                get {
                    return this.columnSER_DURATION_MIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMR_PAT_MAST_INV_ORDER_IDColumn {
                get {
                    return this.columnEMR_PAT_MAST_INV_ORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISOTCHECKLIST_ENTEREDColumn {
                get {
                    return this.columnISOTCHECKLIST_ENTERED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULERow this[int index] {
                get {
                    return ((OT_DTLS_SCHEDULERow)(this.Rows[index]));
                }
            }
            
            public event OT_DTLS_SCHEDULERowChangeEventHandler OT_DTLS_SCHEDULERowChanging;
            
            public event OT_DTLS_SCHEDULERowChangeEventHandler OT_DTLS_SCHEDULERowChanged;
            
            public event OT_DTLS_SCHEDULERowChangeEventHandler OT_DTLS_SCHEDULERowDeleting;
            
            public event OT_DTLS_SCHEDULERowChangeEventHandler OT_DTLS_SCHEDULERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOT_DTLS_SCHEDULERow(OT_DTLS_SCHEDULERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULERow AddOT_DTLS_SCHEDULERow(decimal OT_DTLS_SCHEDULE_ID, decimal OT_MAST_SCHEDULE_ID, decimal ISORDER_WISE, decimal EMR_PAT_DTLS_INV_ORDER_ID, decimal EMR_PROVIDER_VISIT_ID, decimal INV_CATEGORY_ID, decimal INV_MAST_SERVICE_ID, string REMARKS, decimal DURATION_IN_MIN, decimal EMR_PAT_OT_ORDER_ID, string NAME, decimal SER_DURATION_HOUR, decimal SER_DURATION_MIN, decimal EMR_PAT_MAST_INV_ORDER_ID, decimal ISOTCHECKLIST_ENTERED) {
                OT_DTLS_SCHEDULERow rowOT_DTLS_SCHEDULERow = ((OT_DTLS_SCHEDULERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OT_DTLS_SCHEDULE_ID,
                        OT_MAST_SCHEDULE_ID,
                        ISORDER_WISE,
                        EMR_PAT_DTLS_INV_ORDER_ID,
                        EMR_PROVIDER_VISIT_ID,
                        INV_CATEGORY_ID,
                        INV_MAST_SERVICE_ID,
                        REMARKS,
                        DURATION_IN_MIN,
                        EMR_PAT_OT_ORDER_ID,
                        NAME,
                        SER_DURATION_HOUR,
                        SER_DURATION_MIN,
                        EMR_PAT_MAST_INV_ORDER_ID,
                        ISOTCHECKLIST_ENTERED};
                rowOT_DTLS_SCHEDULERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOT_DTLS_SCHEDULERow);
                return rowOT_DTLS_SCHEDULERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OT_DTLS_SCHEDULEDataTable cln = ((OT_DTLS_SCHEDULEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OT_DTLS_SCHEDULEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOT_DTLS_SCHEDULE_ID = base.Columns["OT_DTLS_SCHEDULE_ID"];
                this.columnOT_MAST_SCHEDULE_ID = base.Columns["OT_MAST_SCHEDULE_ID"];
                this.columnISORDER_WISE = base.Columns["ISORDER_WISE"];
                this.columnEMR_PAT_DTLS_INV_ORDER_ID = base.Columns["EMR_PAT_DTLS_INV_ORDER_ID"];
                this.columnEMR_PROVIDER_VISIT_ID = base.Columns["EMR_PROVIDER_VISIT_ID"];
                this.columnINV_CATEGORY_ID = base.Columns["INV_CATEGORY_ID"];
                this.columnINV_MAST_SERVICE_ID = base.Columns["INV_MAST_SERVICE_ID"];
                this.columnREMARKS = base.Columns["REMARKS"];
                this.columnDURATION_IN_MIN = base.Columns["DURATION_IN_MIN"];
                this.columnEMR_PAT_OT_ORDER_ID = base.Columns["EMR_PAT_OT_ORDER_ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSER_DURATION_HOUR = base.Columns["SER_DURATION_HOUR"];
                this.columnSER_DURATION_MIN = base.Columns["SER_DURATION_MIN"];
                this.columnEMR_PAT_MAST_INV_ORDER_ID = base.Columns["EMR_PAT_MAST_INV_ORDER_ID"];
                this.columnISOTCHECKLIST_ENTERED = base.Columns["ISOTCHECKLIST_ENTERED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOT_DTLS_SCHEDULE_ID = new global::System.Data.DataColumn("OT_DTLS_SCHEDULE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_DTLS_SCHEDULE_ID);
                this.columnOT_MAST_SCHEDULE_ID = new global::System.Data.DataColumn("OT_MAST_SCHEDULE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_MAST_SCHEDULE_ID);
                this.columnISORDER_WISE = new global::System.Data.DataColumn("ISORDER_WISE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISORDER_WISE);
                this.columnEMR_PAT_DTLS_INV_ORDER_ID = new global::System.Data.DataColumn("EMR_PAT_DTLS_INV_ORDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMR_PAT_DTLS_INV_ORDER_ID);
                this.columnEMR_PROVIDER_VISIT_ID = new global::System.Data.DataColumn("EMR_PROVIDER_VISIT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMR_PROVIDER_VISIT_ID);
                this.columnINV_CATEGORY_ID = new global::System.Data.DataColumn("INV_CATEGORY_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_CATEGORY_ID);
                this.columnINV_MAST_SERVICE_ID = new global::System.Data.DataColumn("INV_MAST_SERVICE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_MAST_SERVICE_ID);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.columnDURATION_IN_MIN = new global::System.Data.DataColumn("DURATION_IN_MIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDURATION_IN_MIN);
                this.columnEMR_PAT_OT_ORDER_ID = new global::System.Data.DataColumn("EMR_PAT_OT_ORDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMR_PAT_OT_ORDER_ID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSER_DURATION_HOUR = new global::System.Data.DataColumn("SER_DURATION_HOUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_DURATION_HOUR);
                this.columnSER_DURATION_MIN = new global::System.Data.DataColumn("SER_DURATION_MIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_DURATION_MIN);
                this.columnEMR_PAT_MAST_INV_ORDER_ID = new global::System.Data.DataColumn("EMR_PAT_MAST_INV_ORDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMR_PAT_MAST_INV_ORDER_ID);
                this.columnISOTCHECKLIST_ENTERED = new global::System.Data.DataColumn("ISOTCHECKLIST_ENTERED", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISOTCHECKLIST_ENTERED);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULERow NewOT_DTLS_SCHEDULERow() {
                return ((OT_DTLS_SCHEDULERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OT_DTLS_SCHEDULERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OT_DTLS_SCHEDULERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OT_DTLS_SCHEDULERowChanged != null)) {
                    this.OT_DTLS_SCHEDULERowChanged(this, new OT_DTLS_SCHEDULERowChangeEvent(((OT_DTLS_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OT_DTLS_SCHEDULERowChanging != null)) {
                    this.OT_DTLS_SCHEDULERowChanging(this, new OT_DTLS_SCHEDULERowChangeEvent(((OT_DTLS_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OT_DTLS_SCHEDULERowDeleted != null)) {
                    this.OT_DTLS_SCHEDULERowDeleted(this, new OT_DTLS_SCHEDULERowChangeEvent(((OT_DTLS_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OT_DTLS_SCHEDULERowDeleting != null)) {
                    this.OT_DTLS_SCHEDULERowDeleting(this, new OT_DTLS_SCHEDULERowChangeEvent(((OT_DTLS_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOT_DTLS_SCHEDULERow(OT_DTLS_SCHEDULERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OTScheduleDetails ds = new OTScheduleDetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OT_DTLS_SCHEDULEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OT_MAST_SCHEDULEDataTable : global::System.Data.TypedTableBase<OT_MAST_SCHEDULERow> {
            
            private global::System.Data.DataColumn columnOT_MAST_SCHEDULE_ID;
            
            private global::System.Data.DataColumn columnTHEATRE_ID;
            
            private global::System.Data.DataColumn columnAPPT_DATE;
            
            private global::System.Data.DataColumn columnAPPT_ALLOCATION_ID;
            
            private global::System.Data.DataColumn columnSCHEDULE_DATE;
            
            private global::System.Data.DataColumn columnTIME_FROM;
            
            private global::System.Data.DataColumn columnTIME_TO;
            
            private global::System.Data.DataColumn columnREPORTING_STATUS;
            
            private global::System.Data.DataColumn columnMRNO;
            
            private global::System.Data.DataColumn columnISPATIENT;
            
            private global::System.Data.DataColumn columnPROFILE_ID;
            
            private global::System.Data.DataColumn columnISEMERGENCY;
            
            private global::System.Data.DataColumn columnISREGISTER_EXIST;
            
            private global::System.Data.DataColumn columnBILL_STATUS;
            
            private global::System.Data.DataColumn columnISNOTE_EXIST;
            
            private global::System.Data.DataColumn columnISATTACHMENT_EXIST;
            
            private global::System.Data.DataColumn columnISVALID;
            
            private global::System.Data.DataColumn columnOT_AUDIT_ID;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            private global::System.Data.DataColumn columnSCHEDULE_STATUS;
            
            private global::System.Data.DataColumn columnTHEATRE_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_MAST_SCHEDULEDataTable() {
                this.TableName = "OT_MAST_SCHEDULE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OT_MAST_SCHEDULEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OT_MAST_SCHEDULEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OT_MAST_SCHEDULE_IDColumn {
                get {
                    return this.columnOT_MAST_SCHEDULE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THEATRE_IDColumn {
                get {
                    return this.columnTHEATRE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPT_DATEColumn {
                get {
                    return this.columnAPPT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPT_ALLOCATION_IDColumn {
                get {
                    return this.columnAPPT_ALLOCATION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCHEDULE_DATEColumn {
                get {
                    return this.columnSCHEDULE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIME_FROMColumn {
                get {
                    return this.columnTIME_FROM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIME_TOColumn {
                get {
                    return this.columnTIME_TO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REPORTING_STATUSColumn {
                get {
                    return this.columnREPORTING_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MRNOColumn {
                get {
                    return this.columnMRNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISPATIENTColumn {
                get {
                    return this.columnISPATIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROFILE_IDColumn {
                get {
                    return this.columnPROFILE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISEMERGENCYColumn {
                get {
                    return this.columnISEMERGENCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISREGISTER_EXISTColumn {
                get {
                    return this.columnISREGISTER_EXIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BILL_STATUSColumn {
                get {
                    return this.columnBILL_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISNOTE_EXISTColumn {
                get {
                    return this.columnISNOTE_EXIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISATTACHMENT_EXISTColumn {
                get {
                    return this.columnISATTACHMENT_EXIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISVALIDColumn {
                get {
                    return this.columnISVALID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OT_AUDIT_IDColumn {
                get {
                    return this.columnOT_AUDIT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCHEDULE_STATUSColumn {
                get {
                    return this.columnSCHEDULE_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THEATRE_NAMEColumn {
                get {
                    return this.columnTHEATRE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_MAST_SCHEDULERow this[int index] {
                get {
                    return ((OT_MAST_SCHEDULERow)(this.Rows[index]));
                }
            }
            
            public event OT_MAST_SCHEDULERowChangeEventHandler OT_MAST_SCHEDULERowChanging;
            
            public event OT_MAST_SCHEDULERowChangeEventHandler OT_MAST_SCHEDULERowChanged;
            
            public event OT_MAST_SCHEDULERowChangeEventHandler OT_MAST_SCHEDULERowDeleting;
            
            public event OT_MAST_SCHEDULERowChangeEventHandler OT_MAST_SCHEDULERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOT_MAST_SCHEDULERow(OT_MAST_SCHEDULERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_MAST_SCHEDULERow AddOT_MAST_SCHEDULERow(
                        decimal OT_MAST_SCHEDULE_ID, 
                        decimal THEATRE_ID, 
                        System.DateTime APPT_DATE, 
                        decimal APPT_ALLOCATION_ID, 
                        System.DateTime SCHEDULE_DATE, 
                        System.DateTime TIME_FROM, 
                        System.DateTime TIME_TO, 
                        decimal REPORTING_STATUS, 
                        string MRNO, 
                        decimal ISPATIENT, 
                        decimal PROFILE_ID, 
                        decimal ISEMERGENCY, 
                        decimal ISREGISTER_EXIST, 
                        decimal BILL_STATUS, 
                        decimal ISNOTE_EXIST, 
                        decimal ISATTACHMENT_EXIST, 
                        decimal ISVALID, 
                        decimal OT_AUDIT_ID, 
                        string REMARKS, 
                        decimal SCHEDULE_STATUS, 
                        string THEATRE_NAME) {
                OT_MAST_SCHEDULERow rowOT_MAST_SCHEDULERow = ((OT_MAST_SCHEDULERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OT_MAST_SCHEDULE_ID,
                        THEATRE_ID,
                        APPT_DATE,
                        APPT_ALLOCATION_ID,
                        SCHEDULE_DATE,
                        TIME_FROM,
                        TIME_TO,
                        REPORTING_STATUS,
                        MRNO,
                        ISPATIENT,
                        PROFILE_ID,
                        ISEMERGENCY,
                        ISREGISTER_EXIST,
                        BILL_STATUS,
                        ISNOTE_EXIST,
                        ISATTACHMENT_EXIST,
                        ISVALID,
                        OT_AUDIT_ID,
                        REMARKS,
                        SCHEDULE_STATUS,
                        THEATRE_NAME};
                rowOT_MAST_SCHEDULERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOT_MAST_SCHEDULERow);
                return rowOT_MAST_SCHEDULERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OT_MAST_SCHEDULEDataTable cln = ((OT_MAST_SCHEDULEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OT_MAST_SCHEDULEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOT_MAST_SCHEDULE_ID = base.Columns["OT_MAST_SCHEDULE_ID"];
                this.columnTHEATRE_ID = base.Columns["THEATRE_ID"];
                this.columnAPPT_DATE = base.Columns["APPT_DATE"];
                this.columnAPPT_ALLOCATION_ID = base.Columns["APPT_ALLOCATION_ID"];
                this.columnSCHEDULE_DATE = base.Columns["SCHEDULE_DATE"];
                this.columnTIME_FROM = base.Columns["TIME_FROM"];
                this.columnTIME_TO = base.Columns["TIME_TO"];
                this.columnREPORTING_STATUS = base.Columns["REPORTING_STATUS"];
                this.columnMRNO = base.Columns["MRNO"];
                this.columnISPATIENT = base.Columns["ISPATIENT"];
                this.columnPROFILE_ID = base.Columns["PROFILE_ID"];
                this.columnISEMERGENCY = base.Columns["ISEMERGENCY"];
                this.columnISREGISTER_EXIST = base.Columns["ISREGISTER_EXIST"];
                this.columnBILL_STATUS = base.Columns["BILL_STATUS"];
                this.columnISNOTE_EXIST = base.Columns["ISNOTE_EXIST"];
                this.columnISATTACHMENT_EXIST = base.Columns["ISATTACHMENT_EXIST"];
                this.columnISVALID = base.Columns["ISVALID"];
                this.columnOT_AUDIT_ID = base.Columns["OT_AUDIT_ID"];
                this.columnREMARKS = base.Columns["REMARKS"];
                this.columnSCHEDULE_STATUS = base.Columns["SCHEDULE_STATUS"];
                this.columnTHEATRE_NAME = base.Columns["THEATRE_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOT_MAST_SCHEDULE_ID = new global::System.Data.DataColumn("OT_MAST_SCHEDULE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_MAST_SCHEDULE_ID);
                this.columnTHEATRE_ID = new global::System.Data.DataColumn("THEATRE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHEATRE_ID);
                this.columnAPPT_DATE = new global::System.Data.DataColumn("APPT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPT_DATE);
                this.columnAPPT_ALLOCATION_ID = new global::System.Data.DataColumn("APPT_ALLOCATION_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPT_ALLOCATION_ID);
                this.columnSCHEDULE_DATE = new global::System.Data.DataColumn("SCHEDULE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULE_DATE);
                this.columnTIME_FROM = new global::System.Data.DataColumn("TIME_FROM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME_FROM);
                this.columnTIME_TO = new global::System.Data.DataColumn("TIME_TO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME_TO);
                this.columnREPORTING_STATUS = new global::System.Data.DataColumn("REPORTING_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPORTING_STATUS);
                this.columnMRNO = new global::System.Data.DataColumn("MRNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRNO);
                this.columnISPATIENT = new global::System.Data.DataColumn("ISPATIENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISPATIENT);
                this.columnPROFILE_ID = new global::System.Data.DataColumn("PROFILE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFILE_ID);
                this.columnISEMERGENCY = new global::System.Data.DataColumn("ISEMERGENCY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISEMERGENCY);
                this.columnISREGISTER_EXIST = new global::System.Data.DataColumn("ISREGISTER_EXIST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISREGISTER_EXIST);
                this.columnBILL_STATUS = new global::System.Data.DataColumn("BILL_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILL_STATUS);
                this.columnISNOTE_EXIST = new global::System.Data.DataColumn("ISNOTE_EXIST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISNOTE_EXIST);
                this.columnISATTACHMENT_EXIST = new global::System.Data.DataColumn("ISATTACHMENT_EXIST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISATTACHMENT_EXIST);
                this.columnISVALID = new global::System.Data.DataColumn("ISVALID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISVALID);
                this.columnOT_AUDIT_ID = new global::System.Data.DataColumn("OT_AUDIT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_AUDIT_ID);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.columnSCHEDULE_STATUS = new global::System.Data.DataColumn("SCHEDULE_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULE_STATUS);
                this.columnTHEATRE_NAME = new global::System.Data.DataColumn("THEATRE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHEATRE_NAME);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_MAST_SCHEDULERow NewOT_MAST_SCHEDULERow() {
                return ((OT_MAST_SCHEDULERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OT_MAST_SCHEDULERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OT_MAST_SCHEDULERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OT_MAST_SCHEDULERowChanged != null)) {
                    this.OT_MAST_SCHEDULERowChanged(this, new OT_MAST_SCHEDULERowChangeEvent(((OT_MAST_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OT_MAST_SCHEDULERowChanging != null)) {
                    this.OT_MAST_SCHEDULERowChanging(this, new OT_MAST_SCHEDULERowChangeEvent(((OT_MAST_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OT_MAST_SCHEDULERowDeleted != null)) {
                    this.OT_MAST_SCHEDULERowDeleted(this, new OT_MAST_SCHEDULERowChangeEvent(((OT_MAST_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OT_MAST_SCHEDULERowDeleting != null)) {
                    this.OT_MAST_SCHEDULERowDeleting(this, new OT_MAST_SCHEDULERowChangeEvent(((OT_MAST_SCHEDULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOT_MAST_SCHEDULERow(OT_MAST_SCHEDULERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OTScheduleDetails ds = new OTScheduleDetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OT_MAST_SCHEDULEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OT_DTLS_SCHEDULE_RESOURCEDataTable : global::System.Data.TypedTableBase<OT_DTLS_SCHEDULE_RESOURCERow> {
            
            private global::System.Data.DataColumn columnOT_DTLS_SCHEDULE_RESOURCE_ID;
            
            private global::System.Data.DataColumn columnOT_MAST_SCHEDULE_ID;
            
            private global::System.Data.DataColumn columnATTENDEE_TYPE;
            
            private global::System.Data.DataColumn columnRESOURCE_ID;
            
            private global::System.Data.DataColumn columnANESTHESIA_TYPE;
            
            private global::System.Data.DataColumn columnAPPT_ALLOCATION_ID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnATTENDEE_TYPE_NAME;
            
            private global::System.Data.DataColumn columnANESTHESIA_TYPE_NAME;
            
            private global::System.Data.DataColumn columnATTENDEE_DISPLAY_ORDER;
            
            private global::System.Data.DataColumn columnANESTHESIA_DISPLAY_ORDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULE_RESOURCEDataTable() {
                this.TableName = "OT_DTLS_SCHEDULE_RESOURCE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OT_DTLS_SCHEDULE_RESOURCEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OT_DTLS_SCHEDULE_RESOURCEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OT_DTLS_SCHEDULE_RESOURCE_IDColumn {
                get {
                    return this.columnOT_DTLS_SCHEDULE_RESOURCE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OT_MAST_SCHEDULE_IDColumn {
                get {
                    return this.columnOT_MAST_SCHEDULE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTENDEE_TYPEColumn {
                get {
                    return this.columnATTENDEE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESOURCE_IDColumn {
                get {
                    return this.columnRESOURCE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANESTHESIA_TYPEColumn {
                get {
                    return this.columnANESTHESIA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPT_ALLOCATION_IDColumn {
                get {
                    return this.columnAPPT_ALLOCATION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTENDEE_TYPE_NAMEColumn {
                get {
                    return this.columnATTENDEE_TYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANESTHESIA_TYPE_NAMEColumn {
                get {
                    return this.columnANESTHESIA_TYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTENDEE_DISPLAY_ORDERColumn {
                get {
                    return this.columnATTENDEE_DISPLAY_ORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANESTHESIA_DISPLAY_ORDERColumn {
                get {
                    return this.columnANESTHESIA_DISPLAY_ORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULE_RESOURCERow this[int index] {
                get {
                    return ((OT_DTLS_SCHEDULE_RESOURCERow)(this.Rows[index]));
                }
            }
            
            public event OT_DTLS_SCHEDULE_RESOURCERowChangeEventHandler OT_DTLS_SCHEDULE_RESOURCERowChanging;
            
            public event OT_DTLS_SCHEDULE_RESOURCERowChangeEventHandler OT_DTLS_SCHEDULE_RESOURCERowChanged;
            
            public event OT_DTLS_SCHEDULE_RESOURCERowChangeEventHandler OT_DTLS_SCHEDULE_RESOURCERowDeleting;
            
            public event OT_DTLS_SCHEDULE_RESOURCERowChangeEventHandler OT_DTLS_SCHEDULE_RESOURCERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOT_DTLS_SCHEDULE_RESOURCERow(OT_DTLS_SCHEDULE_RESOURCERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULE_RESOURCERow AddOT_DTLS_SCHEDULE_RESOURCERow(decimal OT_DTLS_SCHEDULE_RESOURCE_ID, decimal OT_MAST_SCHEDULE_ID, decimal ATTENDEE_TYPE, string RESOURCE_ID, decimal ANESTHESIA_TYPE, decimal APPT_ALLOCATION_ID, string NAME, string ATTENDEE_TYPE_NAME, string ANESTHESIA_TYPE_NAME, decimal ATTENDEE_DISPLAY_ORDER, decimal ANESTHESIA_DISPLAY_ORDER) {
                OT_DTLS_SCHEDULE_RESOURCERow rowOT_DTLS_SCHEDULE_RESOURCERow = ((OT_DTLS_SCHEDULE_RESOURCERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OT_DTLS_SCHEDULE_RESOURCE_ID,
                        OT_MAST_SCHEDULE_ID,
                        ATTENDEE_TYPE,
                        RESOURCE_ID,
                        ANESTHESIA_TYPE,
                        APPT_ALLOCATION_ID,
                        NAME,
                        ATTENDEE_TYPE_NAME,
                        ANESTHESIA_TYPE_NAME,
                        ATTENDEE_DISPLAY_ORDER,
                        ANESTHESIA_DISPLAY_ORDER};
                rowOT_DTLS_SCHEDULE_RESOURCERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOT_DTLS_SCHEDULE_RESOURCERow);
                return rowOT_DTLS_SCHEDULE_RESOURCERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OT_DTLS_SCHEDULE_RESOURCEDataTable cln = ((OT_DTLS_SCHEDULE_RESOURCEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OT_DTLS_SCHEDULE_RESOURCEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOT_DTLS_SCHEDULE_RESOURCE_ID = base.Columns["OT_DTLS_SCHEDULE_RESOURCE_ID"];
                this.columnOT_MAST_SCHEDULE_ID = base.Columns["OT_MAST_SCHEDULE_ID"];
                this.columnATTENDEE_TYPE = base.Columns["ATTENDEE_TYPE"];
                this.columnRESOURCE_ID = base.Columns["RESOURCE_ID"];
                this.columnANESTHESIA_TYPE = base.Columns["ANESTHESIA_TYPE"];
                this.columnAPPT_ALLOCATION_ID = base.Columns["APPT_ALLOCATION_ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnATTENDEE_TYPE_NAME = base.Columns["ATTENDEE_TYPE_NAME"];
                this.columnANESTHESIA_TYPE_NAME = base.Columns["ANESTHESIA_TYPE_NAME"];
                this.columnATTENDEE_DISPLAY_ORDER = base.Columns["ATTENDEE_DISPLAY_ORDER"];
                this.columnANESTHESIA_DISPLAY_ORDER = base.Columns["ANESTHESIA_DISPLAY_ORDER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOT_DTLS_SCHEDULE_RESOURCE_ID = new global::System.Data.DataColumn("OT_DTLS_SCHEDULE_RESOURCE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_DTLS_SCHEDULE_RESOURCE_ID);
                this.columnOT_MAST_SCHEDULE_ID = new global::System.Data.DataColumn("OT_MAST_SCHEDULE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_MAST_SCHEDULE_ID);
                this.columnATTENDEE_TYPE = new global::System.Data.DataColumn("ATTENDEE_TYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTENDEE_TYPE);
                this.columnRESOURCE_ID = new global::System.Data.DataColumn("RESOURCE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESOURCE_ID);
                this.columnANESTHESIA_TYPE = new global::System.Data.DataColumn("ANESTHESIA_TYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANESTHESIA_TYPE);
                this.columnAPPT_ALLOCATION_ID = new global::System.Data.DataColumn("APPT_ALLOCATION_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPT_ALLOCATION_ID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnATTENDEE_TYPE_NAME = new global::System.Data.DataColumn("ATTENDEE_TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTENDEE_TYPE_NAME);
                this.columnANESTHESIA_TYPE_NAME = new global::System.Data.DataColumn("ANESTHESIA_TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANESTHESIA_TYPE_NAME);
                this.columnATTENDEE_DISPLAY_ORDER = new global::System.Data.DataColumn("ATTENDEE_DISPLAY_ORDER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTENDEE_DISPLAY_ORDER);
                this.columnANESTHESIA_DISPLAY_ORDER = new global::System.Data.DataColumn("ANESTHESIA_DISPLAY_ORDER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANESTHESIA_DISPLAY_ORDER);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULE_RESOURCERow NewOT_DTLS_SCHEDULE_RESOURCERow() {
                return ((OT_DTLS_SCHEDULE_RESOURCERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OT_DTLS_SCHEDULE_RESOURCERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OT_DTLS_SCHEDULE_RESOURCERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OT_DTLS_SCHEDULE_RESOURCERowChanged != null)) {
                    this.OT_DTLS_SCHEDULE_RESOURCERowChanged(this, new OT_DTLS_SCHEDULE_RESOURCERowChangeEvent(((OT_DTLS_SCHEDULE_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OT_DTLS_SCHEDULE_RESOURCERowChanging != null)) {
                    this.OT_DTLS_SCHEDULE_RESOURCERowChanging(this, new OT_DTLS_SCHEDULE_RESOURCERowChangeEvent(((OT_DTLS_SCHEDULE_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OT_DTLS_SCHEDULE_RESOURCERowDeleted != null)) {
                    this.OT_DTLS_SCHEDULE_RESOURCERowDeleted(this, new OT_DTLS_SCHEDULE_RESOURCERowChangeEvent(((OT_DTLS_SCHEDULE_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OT_DTLS_SCHEDULE_RESOURCERowDeleting != null)) {
                    this.OT_DTLS_SCHEDULE_RESOURCERowDeleting(this, new OT_DTLS_SCHEDULE_RESOURCERowChangeEvent(((OT_DTLS_SCHEDULE_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOT_DTLS_SCHEDULE_RESOURCERow(OT_DTLS_SCHEDULE_RESOURCERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OTScheduleDetails ds = new OTScheduleDetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OT_DTLS_SCHEDULE_RESOURCEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OT_DTLS_SCHEDULERow : global::System.Data.DataRow {
            
            private OT_DTLS_SCHEDULEDataTable tableOT_DTLS_SCHEDULE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OT_DTLS_SCHEDULERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOT_DTLS_SCHEDULE = ((OT_DTLS_SCHEDULEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OT_DTLS_SCHEDULE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.OT_DTLS_SCHEDULE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_DTLS_SCHEDULE_ID\' in table \'OT_DTLS_SCHEDULE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.OT_DTLS_SCHEDULE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OT_MAST_SCHEDULE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.OT_MAST_SCHEDULE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_MAST_SCHEDULE_ID\' in table \'OT_DTLS_SCHEDULE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.OT_MAST_SCHEDULE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISORDER_WISE {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.ISORDER_WISEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISORDER_WISE\' in table \'OT_DTLS_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.ISORDER_WISEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMR_PAT_DTLS_INV_ORDER_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_DTLS_INV_ORDER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMR_PAT_DTLS_INV_ORDER_ID\' in table \'OT_DTLS_SCHEDULE\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_DTLS_INV_ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMR_PROVIDER_VISIT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.EMR_PROVIDER_VISIT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMR_PROVIDER_VISIT_ID\' in table \'OT_DTLS_SCHEDULE\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.EMR_PROVIDER_VISIT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INV_CATEGORY_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.INV_CATEGORY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_CATEGORY_ID\' in table \'OT_DTLS_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.INV_CATEGORY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INV_MAST_SERVICE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.INV_MAST_SERVICE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_MAST_SERVICE_ID\' in table \'OT_DTLS_SCHEDULE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.INV_MAST_SERVICE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARKS {
                get {
                    try {
                        return ((string)(this[this.tableOT_DTLS_SCHEDULE.REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS\' in table \'OT_DTLS_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DURATION_IN_MIN {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.DURATION_IN_MINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DURATION_IN_MIN\' in table \'OT_DTLS_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.DURATION_IN_MINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMR_PAT_OT_ORDER_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_OT_ORDER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMR_PAT_OT_ORDER_ID\' in table \'OT_DTLS_SCHEDULE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_OT_ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableOT_DTLS_SCHEDULE.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'OT_DTLS_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SER_DURATION_HOUR {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.SER_DURATION_HOURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SER_DURATION_HOUR\' in table \'OT_DTLS_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.SER_DURATION_HOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SER_DURATION_MIN {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.SER_DURATION_MINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SER_DURATION_MIN\' in table \'OT_DTLS_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.SER_DURATION_MINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMR_PAT_MAST_INV_ORDER_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_MAST_INV_ORDER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMR_PAT_MAST_INV_ORDER_ID\' in table \'OT_DTLS_SCHEDULE\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_MAST_INV_ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISOTCHECKLIST_ENTERED {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE.ISOTCHECKLIST_ENTEREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISOTCHECKLIST_ENTERED\' in table \'OT_DTLS_SCHEDULE\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE.ISOTCHECKLIST_ENTEREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOT_DTLS_SCHEDULE_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.OT_DTLS_SCHEDULE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOT_DTLS_SCHEDULE_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.OT_DTLS_SCHEDULE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOT_MAST_SCHEDULE_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.OT_MAST_SCHEDULE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOT_MAST_SCHEDULE_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.OT_MAST_SCHEDULE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISORDER_WISENull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.ISORDER_WISEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISORDER_WISENull() {
                this[this.tableOT_DTLS_SCHEDULE.ISORDER_WISEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMR_PAT_DTLS_INV_ORDER_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.EMR_PAT_DTLS_INV_ORDER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMR_PAT_DTLS_INV_ORDER_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_DTLS_INV_ORDER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMR_PROVIDER_VISIT_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.EMR_PROVIDER_VISIT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMR_PROVIDER_VISIT_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.EMR_PROVIDER_VISIT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_CATEGORY_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.INV_CATEGORY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_CATEGORY_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.INV_CATEGORY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_MAST_SERVICE_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.INV_MAST_SERVICE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_MAST_SERVICE_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.INV_MAST_SERVICE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKSNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKSNull() {
                this[this.tableOT_DTLS_SCHEDULE.REMARKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDURATION_IN_MINNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.DURATION_IN_MINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDURATION_IN_MINNull() {
                this[this.tableOT_DTLS_SCHEDULE.DURATION_IN_MINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMR_PAT_OT_ORDER_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.EMR_PAT_OT_ORDER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMR_PAT_OT_ORDER_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_OT_ORDER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableOT_DTLS_SCHEDULE.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSER_DURATION_HOURNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.SER_DURATION_HOURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSER_DURATION_HOURNull() {
                this[this.tableOT_DTLS_SCHEDULE.SER_DURATION_HOURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSER_DURATION_MINNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.SER_DURATION_MINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSER_DURATION_MINNull() {
                this[this.tableOT_DTLS_SCHEDULE.SER_DURATION_MINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMR_PAT_MAST_INV_ORDER_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.EMR_PAT_MAST_INV_ORDER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMR_PAT_MAST_INV_ORDER_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE.EMR_PAT_MAST_INV_ORDER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISOTCHECKLIST_ENTEREDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE.ISOTCHECKLIST_ENTEREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISOTCHECKLIST_ENTEREDNull() {
                this[this.tableOT_DTLS_SCHEDULE.ISOTCHECKLIST_ENTEREDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OT_MAST_SCHEDULERow : global::System.Data.DataRow {
            
            private OT_MAST_SCHEDULEDataTable tableOT_MAST_SCHEDULE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OT_MAST_SCHEDULERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOT_MAST_SCHEDULE = ((OT_MAST_SCHEDULEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OT_MAST_SCHEDULE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.OT_MAST_SCHEDULE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_MAST_SCHEDULE_ID\' in table \'OT_MAST_SCHEDULE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.OT_MAST_SCHEDULE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal THEATRE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.THEATRE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THEATRE_ID\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.THEATRE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime APPT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOT_MAST_SCHEDULE.APPT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPT_DATE\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.APPT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal APPT_ALLOCATION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.APPT_ALLOCATION_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPT_ALLOCATION_ID\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.APPT_ALLOCATION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SCHEDULE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOT_MAST_SCHEDULE.SCHEDULE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULE_DATE\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.SCHEDULE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME_FROM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOT_MAST_SCHEDULE.TIME_FROMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME_FROM\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.TIME_FROMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME_TO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOT_MAST_SCHEDULE.TIME_TOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME_TO\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.TIME_TOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REPORTING_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.REPORTING_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPORTING_STATUS\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.REPORTING_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MRNO {
                get {
                    try {
                        return ((string)(this[this.tableOT_MAST_SCHEDULE.MRNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRNO\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.MRNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISPATIENT {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.ISPATIENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISPATIENT\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.ISPATIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROFILE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.PROFILE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFILE_ID\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.PROFILE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISEMERGENCY {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.ISEMERGENCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISEMERGENCY\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.ISEMERGENCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISREGISTER_EXIST {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.ISREGISTER_EXISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISREGISTER_EXIST\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.ISREGISTER_EXISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BILL_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.BILL_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BILL_STATUS\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.BILL_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISNOTE_EXIST {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.ISNOTE_EXISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISNOTE_EXIST\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.ISNOTE_EXISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISATTACHMENT_EXIST {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.ISATTACHMENT_EXISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISATTACHMENT_EXIST\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.ISATTACHMENT_EXISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISVALID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.ISVALIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISVALID\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.ISVALIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OT_AUDIT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.OT_AUDIT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_AUDIT_ID\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.OT_AUDIT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARKS {
                get {
                    try {
                        return ((string)(this[this.tableOT_MAST_SCHEDULE.REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCHEDULE_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_MAST_SCHEDULE.SCHEDULE_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULE_STATUS\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.SCHEDULE_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THEATRE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableOT_MAST_SCHEDULE.THEATRE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THEATRE_NAME\' in table \'OT_MAST_SCHEDULE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_MAST_SCHEDULE.THEATRE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOT_MAST_SCHEDULE_IDNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.OT_MAST_SCHEDULE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOT_MAST_SCHEDULE_IDNull() {
                this[this.tableOT_MAST_SCHEDULE.OT_MAST_SCHEDULE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHEATRE_IDNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.THEATRE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHEATRE_IDNull() {
                this[this.tableOT_MAST_SCHEDULE.THEATRE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPT_DATENull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.APPT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPT_DATENull() {
                this[this.tableOT_MAST_SCHEDULE.APPT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPT_ALLOCATION_IDNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.APPT_ALLOCATION_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPT_ALLOCATION_IDNull() {
                this[this.tableOT_MAST_SCHEDULE.APPT_ALLOCATION_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCHEDULE_DATENull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.SCHEDULE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCHEDULE_DATENull() {
                this[this.tableOT_MAST_SCHEDULE.SCHEDULE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIME_FROMNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.TIME_FROMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIME_FROMNull() {
                this[this.tableOT_MAST_SCHEDULE.TIME_FROMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIME_TONull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.TIME_TOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIME_TONull() {
                this[this.tableOT_MAST_SCHEDULE.TIME_TOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPORTING_STATUSNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.REPORTING_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPORTING_STATUSNull() {
                this[this.tableOT_MAST_SCHEDULE.REPORTING_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMRNONull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.MRNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMRNONull() {
                this[this.tableOT_MAST_SCHEDULE.MRNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISPATIENTNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.ISPATIENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISPATIENTNull() {
                this[this.tableOT_MAST_SCHEDULE.ISPATIENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROFILE_IDNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.PROFILE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROFILE_IDNull() {
                this[this.tableOT_MAST_SCHEDULE.PROFILE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISEMERGENCYNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.ISEMERGENCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISEMERGENCYNull() {
                this[this.tableOT_MAST_SCHEDULE.ISEMERGENCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISREGISTER_EXISTNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.ISREGISTER_EXISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISREGISTER_EXISTNull() {
                this[this.tableOT_MAST_SCHEDULE.ISREGISTER_EXISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILL_STATUSNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.BILL_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILL_STATUSNull() {
                this[this.tableOT_MAST_SCHEDULE.BILL_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISNOTE_EXISTNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.ISNOTE_EXISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISNOTE_EXISTNull() {
                this[this.tableOT_MAST_SCHEDULE.ISNOTE_EXISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISATTACHMENT_EXISTNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.ISATTACHMENT_EXISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISATTACHMENT_EXISTNull() {
                this[this.tableOT_MAST_SCHEDULE.ISATTACHMENT_EXISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISVALIDNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.ISVALIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISVALIDNull() {
                this[this.tableOT_MAST_SCHEDULE.ISVALIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOT_AUDIT_IDNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.OT_AUDIT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOT_AUDIT_IDNull() {
                this[this.tableOT_MAST_SCHEDULE.OT_AUDIT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKSNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKSNull() {
                this[this.tableOT_MAST_SCHEDULE.REMARKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCHEDULE_STATUSNull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.SCHEDULE_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCHEDULE_STATUSNull() {
                this[this.tableOT_MAST_SCHEDULE.SCHEDULE_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHEATRE_NAMENull() {
                return this.IsNull(this.tableOT_MAST_SCHEDULE.THEATRE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHEATRE_NAMENull() {
                this[this.tableOT_MAST_SCHEDULE.THEATRE_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OT_DTLS_SCHEDULE_RESOURCERow : global::System.Data.DataRow {
            
            private OT_DTLS_SCHEDULE_RESOURCEDataTable tableOT_DTLS_SCHEDULE_RESOURCE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OT_DTLS_SCHEDULE_RESOURCERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOT_DTLS_SCHEDULE_RESOURCE = ((OT_DTLS_SCHEDULE_RESOURCEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OT_DTLS_SCHEDULE_RESOURCE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_DTLS_SCHEDULE_RESOURCE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_DTLS_SCHEDULE_RESOURCE_ID\' in table \'OT_DTLS_SCHEDULE_RE" +
                                "SOURCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_DTLS_SCHEDULE_RESOURCE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OT_MAST_SCHEDULE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_MAST_SCHEDULE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_MAST_SCHEDULE_ID\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_MAST_SCHEDULE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ATTENDEE_TYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTENDEE_TYPE\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESOURCE_ID {
                get {
                    try {
                        return ((string)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.RESOURCE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESOURCE_ID\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.RESOURCE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ANESTHESIA_TYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANESTHESIA_TYPE\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal APPT_ALLOCATION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.APPT_ALLOCATION_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPT_ALLOCATION_ID\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.APPT_ALLOCATION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTENDEE_TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTENDEE_TYPE_NAME\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ANESTHESIA_TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANESTHESIA_TYPE_NAME\' in table \'OT_DTLS_SCHEDULE_RESOURCE\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ATTENDEE_DISPLAY_ORDER {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_DISPLAY_ORDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTENDEE_DISPLAY_ORDER\' in table \'OT_DTLS_SCHEDULE_RESOURCE" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_DISPLAY_ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ANESTHESIA_DISPLAY_ORDER {
                get {
                    try {
                        return ((decimal)(this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_DISPLAY_ORDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANESTHESIA_DISPLAY_ORDER\' in table \'OT_DTLS_SCHEDULE_RESOUR" +
                                "CE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_DISPLAY_ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOT_DTLS_SCHEDULE_RESOURCE_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_DTLS_SCHEDULE_RESOURCE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOT_DTLS_SCHEDULE_RESOURCE_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_DTLS_SCHEDULE_RESOURCE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOT_MAST_SCHEDULE_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_MAST_SCHEDULE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOT_MAST_SCHEDULE_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.OT_MAST_SCHEDULE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTENDEE_TYPENull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTENDEE_TYPENull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESOURCE_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.RESOURCE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESOURCE_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.RESOURCE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANESTHESIA_TYPENull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANESTHESIA_TYPENull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPT_ALLOCATION_IDNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.APPT_ALLOCATION_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPT_ALLOCATION_IDNull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.APPT_ALLOCATION_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTENDEE_TYPE_NAMENull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTENDEE_TYPE_NAMENull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANESTHESIA_TYPE_NAMENull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANESTHESIA_TYPE_NAMENull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTENDEE_DISPLAY_ORDERNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_DISPLAY_ORDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTENDEE_DISPLAY_ORDERNull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ATTENDEE_DISPLAY_ORDERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANESTHESIA_DISPLAY_ORDERNull() {
                return this.IsNull(this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_DISPLAY_ORDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANESTHESIA_DISPLAY_ORDERNull() {
                this[this.tableOT_DTLS_SCHEDULE_RESOURCE.ANESTHESIA_DISPLAY_ORDERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OT_DTLS_SCHEDULERowChangeEvent : global::System.EventArgs {
            
            private OT_DTLS_SCHEDULERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULERowChangeEvent(OT_DTLS_SCHEDULERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OT_MAST_SCHEDULERowChangeEvent : global::System.EventArgs {
            
            private OT_MAST_SCHEDULERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_MAST_SCHEDULERowChangeEvent(OT_MAST_SCHEDULERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_MAST_SCHEDULERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OT_DTLS_SCHEDULE_RESOURCERowChangeEvent : global::System.EventArgs {
            
            private OT_DTLS_SCHEDULE_RESOURCERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULE_RESOURCERowChangeEvent(OT_DTLS_SCHEDULE_RESOURCERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OT_DTLS_SCHEDULE_RESOURCERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591