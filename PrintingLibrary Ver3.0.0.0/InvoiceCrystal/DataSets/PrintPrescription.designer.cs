//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PrintPresc {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PrintPrescription")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PrintPrescription : global::System.Data.DataSet {
        
        private PrintPrescriptionDataTable tablePrintPrescription;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PrintPrescription() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PrintPrescription(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PrintPrescription"] != null)) {
                    base.Tables.Add(new PrintPrescriptionDataTable(ds.Tables["PrintPrescription"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PrintPrescriptionDataTable _PrintPrescription {
            get {
                return this.tablePrintPrescription;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PrintPrescription cln = ((PrintPrescription)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PrintPrescription"] != null)) {
                    base.Tables.Add(new PrintPrescriptionDataTable(ds.Tables["PrintPrescription"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePrintPrescription = ((PrintPrescriptionDataTable)(base.Tables["PrintPrescription"]));
            if ((initTable == true)) {
                if ((this.tablePrintPrescription != null)) {
                    this.tablePrintPrescription.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PrintPrescription";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PrintPrescription.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePrintPrescription = new PrintPrescriptionDataTable();
            base.Tables.Add(this.tablePrintPrescription);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_PrintPrescription() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PrintPrescription ds = new PrintPrescription();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PrintPrescriptionRowChangeEventHandler(object sender, PrintPrescriptionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PrintPrescriptionDataTable : global::System.Data.TypedTableBase<PrintPrescriptionRow> {
            
            private global::System.Data.DataColumn columnMRNO;
            
            private global::System.Data.DataColumn columnMEDICINE_NAME;
            
            private global::System.Data.DataColumn columnDOSAGE;
            
            private global::System.Data.DataColumn columnDURATION;
            
            private global::System.Data.DataColumn columnROUTE;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            private global::System.Data.DataColumn columnPATIENT_NAME;
            
            private global::System.Data.DataColumn columnREQUESTED_ON;
            
            private global::System.Data.DataColumn columnDOCTOR_NAME;
            
            private global::System.Data.DataColumn columnPHARMACIST_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintPrescriptionDataTable() {
                this.TableName = "PrintPrescription";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrintPrescriptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PrintPrescriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MRNOColumn {
                get {
                    return this.columnMRNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEDICINE_NAMEColumn {
                get {
                    return this.columnMEDICINE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOSAGEColumn {
                get {
                    return this.columnDOSAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DURATIONColumn {
                get {
                    return this.columnDURATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROUTEColumn {
                get {
                    return this.columnROUTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PATIENT_NAMEColumn {
                get {
                    return this.columnPATIENT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REQUESTED_ONColumn {
                get {
                    return this.columnREQUESTED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCTOR_NAMEColumn {
                get {
                    return this.columnDOCTOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHARMACIST_NAMEColumn {
                get {
                    return this.columnPHARMACIST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintPrescriptionRow this[int index] {
                get {
                    return ((PrintPrescriptionRow)(this.Rows[index]));
                }
            }
            
            public event PrintPrescriptionRowChangeEventHandler PrintPrescriptionRowChanging;
            
            public event PrintPrescriptionRowChangeEventHandler PrintPrescriptionRowChanged;
            
            public event PrintPrescriptionRowChangeEventHandler PrintPrescriptionRowDeleting;
            
            public event PrintPrescriptionRowChangeEventHandler PrintPrescriptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPrintPrescriptionRow(PrintPrescriptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintPrescriptionRow AddPrintPrescriptionRow(string MRNO, string MEDICINE_NAME, string DOSAGE, string DURATION, string ROUTE, string REMARKS, string PATIENT_NAME, System.DateTime REQUESTED_ON, string DOCTOR_NAME, string PHARMACIST_NAME) {
                PrintPrescriptionRow rowPrintPrescriptionRow = ((PrintPrescriptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MRNO,
                        MEDICINE_NAME,
                        DOSAGE,
                        DURATION,
                        ROUTE,
                        REMARKS,
                        PATIENT_NAME,
                        REQUESTED_ON,
                        DOCTOR_NAME,
                        PHARMACIST_NAME};
                rowPrintPrescriptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrintPrescriptionRow);
                return rowPrintPrescriptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PrintPrescriptionDataTable cln = ((PrintPrescriptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PrintPrescriptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMRNO = base.Columns["MRNO"];
                this.columnMEDICINE_NAME = base.Columns["MEDICINE_NAME"];
                this.columnDOSAGE = base.Columns["DOSAGE"];
                this.columnDURATION = base.Columns["DURATION"];
                this.columnROUTE = base.Columns["ROUTE"];
                this.columnREMARKS = base.Columns["REMARKS"];
                this.columnPATIENT_NAME = base.Columns["PATIENT_NAME"];
                this.columnREQUESTED_ON = base.Columns["REQUESTED_ON"];
                this.columnDOCTOR_NAME = base.Columns["DOCTOR_NAME"];
                this.columnPHARMACIST_NAME = base.Columns["PHARMACIST_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMRNO = new global::System.Data.DataColumn("MRNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRNO);
                this.columnMEDICINE_NAME = new global::System.Data.DataColumn("MEDICINE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEDICINE_NAME);
                this.columnDOSAGE = new global::System.Data.DataColumn("DOSAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOSAGE);
                this.columnDURATION = new global::System.Data.DataColumn("DURATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDURATION);
                this.columnROUTE = new global::System.Data.DataColumn("ROUTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTE);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.columnPATIENT_NAME = new global::System.Data.DataColumn("PATIENT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENT_NAME);
                this.columnREQUESTED_ON = new global::System.Data.DataColumn("REQUESTED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREQUESTED_ON);
                this.columnDOCTOR_NAME = new global::System.Data.DataColumn("DOCTOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCTOR_NAME);
                this.columnPHARMACIST_NAME = new global::System.Data.DataColumn("PHARMACIST_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHARMACIST_NAME);
                this.ExtendedProperties.Add("Generator_TablePropName", "_PrintPrescription");
                this.ExtendedProperties.Add("Generator_UserTableName", "PrintPrescription");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintPrescriptionRow NewPrintPrescriptionRow() {
                return ((PrintPrescriptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PrintPrescriptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PrintPrescriptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PrintPrescriptionRowChanged != null)) {
                    this.PrintPrescriptionRowChanged(this, new PrintPrescriptionRowChangeEvent(((PrintPrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PrintPrescriptionRowChanging != null)) {
                    this.PrintPrescriptionRowChanging(this, new PrintPrescriptionRowChangeEvent(((PrintPrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PrintPrescriptionRowDeleted != null)) {
                    this.PrintPrescriptionRowDeleted(this, new PrintPrescriptionRowChangeEvent(((PrintPrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PrintPrescriptionRowDeleting != null)) {
                    this.PrintPrescriptionRowDeleting(this, new PrintPrescriptionRowChangeEvent(((PrintPrescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePrintPrescriptionRow(PrintPrescriptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PrintPrescription ds = new PrintPrescription();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PrintPrescriptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PrintPrescriptionRow : global::System.Data.DataRow {
            
            private PrintPrescriptionDataTable tablePrintPrescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrintPrescriptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrintPrescription = ((PrintPrescriptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MRNO {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.MRNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRNO\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.MRNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEDICINE_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.MEDICINE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEDICINE_NAME\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.MEDICINE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOSAGE {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.DOSAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOSAGE\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.DOSAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DURATION {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.DURATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DURATION\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.DURATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROUTE {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.ROUTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUTE\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.ROUTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARKS {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PATIENT_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.PATIENT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENT_NAME\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.PATIENT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REQUESTED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePrintPrescription.REQUESTED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REQUESTED_ON\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.REQUESTED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOCTOR_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.DOCTOR_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCTOR_NAME\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.DOCTOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHARMACIST_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrintPrescription.PHARMACIST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHARMACIST_NAME\' in table \'PrintPrescription\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintPrescription.PHARMACIST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMRNONull() {
                return this.IsNull(this.tablePrintPrescription.MRNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMRNONull() {
                this[this.tablePrintPrescription.MRNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEDICINE_NAMENull() {
                return this.IsNull(this.tablePrintPrescription.MEDICINE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEDICINE_NAMENull() {
                this[this.tablePrintPrescription.MEDICINE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOSAGENull() {
                return this.IsNull(this.tablePrintPrescription.DOSAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOSAGENull() {
                this[this.tablePrintPrescription.DOSAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDURATIONNull() {
                return this.IsNull(this.tablePrintPrescription.DURATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDURATIONNull() {
                this[this.tablePrintPrescription.DURATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROUTENull() {
                return this.IsNull(this.tablePrintPrescription.ROUTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROUTENull() {
                this[this.tablePrintPrescription.ROUTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKSNull() {
                return this.IsNull(this.tablePrintPrescription.REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKSNull() {
                this[this.tablePrintPrescription.REMARKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPATIENT_NAMENull() {
                return this.IsNull(this.tablePrintPrescription.PATIENT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPATIENT_NAMENull() {
                this[this.tablePrintPrescription.PATIENT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREQUESTED_ONNull() {
                return this.IsNull(this.tablePrintPrescription.REQUESTED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREQUESTED_ONNull() {
                this[this.tablePrintPrescription.REQUESTED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCTOR_NAMENull() {
                return this.IsNull(this.tablePrintPrescription.DOCTOR_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCTOR_NAMENull() {
                this[this.tablePrintPrescription.DOCTOR_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHARMACIST_NAMENull() {
                return this.IsNull(this.tablePrintPrescription.PHARMACIST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHARMACIST_NAMENull() {
                this[this.tablePrintPrescription.PHARMACIST_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PrintPrescriptionRowChangeEvent : global::System.EventArgs {
            
            private PrintPrescriptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintPrescriptionRowChangeEvent(PrintPrescriptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintPrescriptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591